import App from 'next/app';
import Head from 'next/head';
import { RecoilRoot } from "recoil";
import { Suspense } from "react";
import Header from '../components/Header';

import "tailwindcss/tailwind.css";

const isServer = typeof window === "undefined";

function MyApp({ Component, pageProps }) {
  return (
    <div className="text-black">
      <RecoilRoot>
        <Head>
          <title>查公車</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
          <link
            href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@100;300;400;500;700;900&display=swap"
            rel="stylesheet"
          />
        </Head>
        <Header />
        {!isServer ? (
          <Suspense fallback={<div>Loading...</div>}>
            <Component {...pageProps} />
          </Suspense>
        ) : null}
      </RecoilRoot>
    </div>
  );
}

// Only uncomment this method if you have blocking data requirements for
// every single page in your application. This disables the ability to
// perform automatic static optimization, causing every page in your app to
// be server-side rendered.
//
MyApp.getInitialProps = async (appContext) => {
  // calls page's `getInitialProps` and fills `appProps.pageProps`
  const appProps = await App.getInitialProps(appContext);

  return { ...appProps }
}

export default MyApp